apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply from: "$project.rootDir/tools/versioning.gradle"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.yichiuan.moviedb"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode generateVersionCode(rootProject.ext.minSdkVersion, 0, versionMajor, versionMinor, versionPatch)
        versionName generateVersionName(versionMajor, versionMinor, versionPatch)

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary= true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    implementation "com.android.support:appcompat-v7:${libs.supportVersion}"
    implementation "com.android.support:design:${libs.supportVersion}"
    implementation "com.android.support.constraint:constraint-layout:${libs.constraint_layout}"
    implementation "com.android.support:support-vector-drawable:${libs.supportVersion}"
    implementation "com.android.support:recyclerview-v7:${libs.supportVersion}"

    // For Lifecycle and ViewModel
    implementation "android.arch.lifecycle:extensions:${libs.arch_components}"
    implementation "android.arch.lifecycle:viewmodel:${libs.arch_components}"
    kapt "android.arch.lifecycle:compiler:${libs.arch_components}"

    // RxJava
    implementation "io.reactivex.rxjava2:rxandroid:${libs.rxandroid}"
    implementation "io.reactivex.rxjava2:rxjava:${libs.rxjava}"
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:${libs.rxbinding}"
    implementation "com.jakewharton.rx2:replaying-share:${libs.replaying_share}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${libs.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${libs.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${libs.retrofit}"

    implementation "com.squareup.okhttp3:okhttp:${libs.okhttp3}"
    implementation "com.squareup.okhttp3:logging-interceptor:${libs.okhttp3}"

    // Dagger DI
    implementation "com.google.dagger:dagger:${libs.dagger}"
    kapt "com.google.dagger:dagger-compiler:${libs.dagger}"

    implementation "com.google.dagger:dagger-android-support:${libs.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${libs.dagger}"

    // debug
    implementation "com.jakewharton.timber:timber:${libs.timber}"

    // testing
    testImplementation "junit:junit:${libs.junit}"
    androidTestImplementation "com.android.support.test:runner:${libs.test_runner}"
    androidTestImplementation "com.android.support.test:rules:${libs.test_rules}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${libs.espresso}"
}
